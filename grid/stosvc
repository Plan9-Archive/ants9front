#!/bin/rc
# attaches to hubfs and runs on storage node

rfork
spawnmax=6
if(! test -e /tmp/stononce)
	echo 1009 >tmp/stononce
nonce = `{cat /tmp/stononce}
if(! test -e /tmp/nextport)
	echo 20000 >/tmp/nextport
ndb/ipquery sys $sysname ip |sed 's/ip=127.0.0.1//' >/tmp/myip
. /tmp/myip
scorefile=/n/9fat/scorenames
if(! test -e $scorefile)
	mount /srv/fatsrv /n/9fat

while(usercmd=`{read}){
	reqcmd=''
	srvowner=''
	username=$usercmd(1)
	echo $username $usercmd >>/tmp/stolog.$pid
	if(test -e /srv/$username.req){
		srvowner=`{ls -l /srv/$username.req |awk '{print $4}'}
		if(~ $srvowner $username){
			echo reqcmd equals cat /srv/$username.req >>/tmp/stolog.$pid
			reqcmd=`{cat /srv/$username.req}
			echo $reqcmd >>/usr/grid/$username.reqlog
		}
		if not
			echo user id error >[1=2]
		rm /srv/$username.req
	}
	if(! ~ $username $reqcmd(1))
		reqcmd=(fail fail)
	usercmd=$reqcmd(2-)
	switch($usercmd){
	case spawn*
		if(! test -e /tmp/spawncount)
			echo 0 >/tmp/spawncount
		spawncount=`{cat /tmp/spawncount}
		if(test -e /srv/^$usercmd(2)){
			echo that root is already being served from this storage node >[1=2]
			echo use save to clone it to a new name if desired >[1=2]
		}
		if not if(! ~ $spawncount $spawnmax){
			usercheck=`{ndb/query -f /n/9fat/scorenames -a scorename $usercmd(2) user |grep $username}
			if(~ $usercheck $username){
				echo init ramdisk fossil...sleeping for 10...
				stoport=`{cat /tmp/nextport}
				echo $username spawnroot -l $stoport $usercmd(2) >>/tmp/stolog.$pid
				spawnroot -l $stoport $usercmd(2) &
				spawncount=`{echo $spawncount '+ 1' |hoc}
				echo $spawncount >/tmp/spawncount
				echo $username >/usr/grid/$usercmd(2)
				if(! test -d /usr/grid/$username)
					mkdir /usr/grid/$username
				sleep 10
				echo 'fetch tcp!'^$ip^'!'^$stoport $usercmd(2-)
				echo 'fetch tcp!'^$ip^'!'^$stoport $usercmd(2-) >/usr/grid/$username/$usercmd(2)
				echo 'fetch tcp!'^$ip^'!'^$stoport $usercmd(2-) >>/n/g/cpu.in
				stoport=`{echo $stoport '+ 2' |hoc}
				echo $stoport >/tmp/nextport
			}
			if not
				echo $usercmd(2) not found for $username
		}
		if not
			echo spawn limit reached >[1=2]
	case save*
		echo savesnap -u $username $usercmd(2) $usercmd(3) $nonce >>/tmp/stolog.$pid
		savesnap -u $username -r /srv/^$usercmd(2) -s /srv/^$usercmd(2)^fscons $usercmd(3)^.^$nonce &
		nonce=`{echo $nonce ' + 100 ' |hoc}
		echo $nonce >/tmp/stononce
	case invite*
		inviteduser=$usercmd(2)
		targetfs=$usercmd(3)
		fsowner=`{cat /usr/grid/$targetfs}
		if(~ $username $fsowner){
			echo uname $inviteduser $inviteduser >>/srv/$targetfs^fscons
			echo 'uname sys +'^$inviteduser >>/srv/$targetfs^fscons
			echo 'uname upas +'^$inviteduser >>/srv/$targetfs^fscons
			sleep 1
			echo savesnap -u $inviteduser $targetfs $targetfs^$inviteduser $nonce >>/tmp/stolog.$pid
			savesnap -u $inviteduser -r /srv/$targetfs -s /srv/$targetfs^fscons $targetfs^$inviteduser^.^$nonce &
			nonce=`{echo $nonce ' + 100 ' |hoc}
			echo $nonce >/tmp/stononce
		}
		if not
			echo $targetfs not owned by $username >[1=2]
	case boom*
		targetfs=$usercmd(2)
		fsowner=`{cat /usr/grid/$targetfs}
		if(~ $username $fsowner){
			echo boom $targetfs >>/n/g/cpu.in
			sleep 1
			. /tmp/kill.$targetfs
			rm /usr/grid/$targetfs
			rm /usr/grid/$username/$targetfs
			echo $targetfs BOOMed
		}
		if not
			echo $targetfs not owned by $username >[1=2]
	case status
		echo active grid namespaces for $username
		for(i in `{ls /usr/grid/$username}){
			basename $i
			echo serving on cpu port `{cat $i |sed 's/.*!.*!//g' |sed 's/ .*//g'}
		}
	case scores*
		if(! test -e /n/9fat/scorenames)
			mount /srv/fatsrv /n/9fat
		if(~ $#usercmd 2)
			ndb/query -a -f /n/9fat/scorenames user $username scorename |grep $usercmd(2)
		if not
			ndb/query -a -f /n/9fat/scorenames user $username scorename
	case fail*
		echo command authorization failed
	case *
		echo unknown command >[1=2]
	}
}
