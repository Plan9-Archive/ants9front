#!/bin/rc
# attaches to hubfs from storage server and runs on cpu provider node

rfork
if(! test -e /tmp/nextport)
	echo 20000 >/tmp/nextport
ndb/ipquery sys $sysname ip |sed 's/ip=127.0.0.1//' >/tmp/myip
. /tmp/myip

while(usercmd=`{read}){
	switch($usercmd){
	case spawn*
		echo spawn not supported on cpu node >[2=1]
	case fetch*
		if(~ $#usercmd 4){
			cpuport=`{cat /tmp/nextport}
			roothost=`{echo $usercmd(2) | awk -F ! '{print $2}'}
			echo fetchroot -d $usercmd(2) -p $cpuport $usercmd(3) >>/tmp/cpusvclog.$pid
			fetchroot -d $usercmd(2) -p $cpuport $usercmd(3) &
			if(test -e /zrv/ctl.$usercmd(3))
				echo /zrv/ctl.$usercmd(3) already exists >[2=1]
			if(! test -e /zrv/ctl.$usercmd(3)){
				hubfs -s /zrv/ctl.$usercmd(3)
				mount -c /zrv/ctl.$usercmd(3) /n/boom
				touch /n/boom/fs
				fsctl $roothost $usercmd(3) </n/boom/fs &
				chmod 660 /zrv/ctl.$usercmd(3)
				chgrp -o $usercmd(4) /zrv/ctl.$usercmd(3)
			}
			sleep 4
			echo '	rcpu -h tcp!'^$ip^!^$cpuport -u $usercmd(4)
			cpuport=`{echo $cpuport '+ 2' |hoc}
			echo $cpuport >/tmp/nextport
		}
		if not
			echo fetch dialstring scorename user >[2=1]
	case log
		cat /tmp/cpusvclog.$pid
	case scores
		echo scores must be retrieved from storage node >[2=1]
	case save*
		echo save must be performed on storage node >[2=1]
	case clean*
		echo clean not yet implemented >[2=1]
	case *
		echo unknown command >[2=1]
	}
}
