.TH VENTIPROG 8
.SH NAME
ventiprog,
fossilize,
storescore,
cpsys,
fosreset,
fossilstart,
foshalt \- backup between ventis, replicate fossils, and archive rootscores
.SH SYNOPSIS
.PP
.B ventiprog
[
.I -p prepfile  
]
[
.I -f infofile
]
[
.I ventihttp_dialstring
]
.PP
.B fossilize
[
.I partition
]
[
.I fsname
]
.PP
.B storescore
.PP
.B cpsys
.I source
.I dest
.PP
.B fosreset
.I rootscore
[
.I partition
]
[
.I ventiaddr
]
.PP
.B fossilstart
[
.I partition
]
[
.I srvname
]
.PP
.B foshalt
.PP
.B /n/9fat/rootscor
.PP
.B /n/9fat/wrcmd
.SH DESCRIPTION
These commands aid in the maintenance and replication of
venti/fossil servers. See
.IR fossil (4)
and
.IR fossilcons (8)
for an overview of the fossil system, fossil/last, flfmt -v, and
.IR venti (8)
and
.IR venti-backup (8)
for an overview of venti and replication with wrarena.
.PP
Note that these commands make certain assumptions about system
configuration and require some manual setup and additional
administrative actions for use as a complete backup/replication workflow.
As with all system administration scripts, please study their interaction with
your local environment before use. 
.SS Overview
These scripts help perform the workflow of replicating between active ventis, replicating fossils that make use of them, and preserving the fossil rootscores. There is a set sequence of operations to correctly replicate active venti/fossil systems. First, and not automated by these scripts, an active 
.IR fossil (4)
must be taking snapshots. This happens automatically, or can be triggered by sending the comand
.B fsys main snap -a
to the fossil console. The workflow of 
.IR ventiprog 
and related commands assumes that the desired snapshot operation has been completed.
.SS Venti replication
After the desired snapshot is finished (which may simply be the automatic daily snapshot) the
.IR fossilize
of a given
.I partition
prints the output of 
.IR fossil/last 
, mounts a 
.I 9fat 
partition if necessary, and
appends the rootscore to 
.I /n/9fat/scores.$fsname
which is taken as a conventional storage location for fossil rootscores and venti offset data. Two optional parameters may be provided, first a partition location, and second the value of fsname, which will otherwise default to $sysname. Rootscores need to be kept secure so this file should be treated in the same manner as nvram.
.PP
.I storescore
is a small helper script which stores its input, conventionally produced by
.I fossilize
in the form of a vacscore and system fsname, in the 9fat partition appended to the file
.B scores.fsname
.PP
After a snapshot has been completed and the rootscore saved, replicating data from the venti used by that fossil to other ventis will make that rootscore available for use. The task of progressively replicating data between ventis is given to the
.IR ventiprog
script. Prior to using 
.IR ventiprog
, the user must create the file
.B bkup.info
which begins with the dialstring of the venti to which data will be replicated. Each time 
.IR ventiprog 
is run it updates this file with a new final clump offset parameter. The optional parameters to the ventibackup script are
.B [-p prepfile] [-f infofile] [ventihttp_dialstring]
which allow you to specify an additional script to run (prepfile) prior to the main backup operation, a differently named infofile rather than bkup.info (perhaps beginning with a different dialstring for a different target venti), and a different http address to dial than the default of 127.1:8000.
.SS Fossil replication
Resetting running fossils to a different score and replicating fossils between systems is done with
.IR fosreset
, which uses
.I vacscore
to 
.IR flfmt -v 
the given
.I partition 
using the
.I ventiaddr
given. If no parameter is provided the environment value of 
.B $venti 
will be used and if a partition is absent
.I /dev/sdC0/fossil
will be used as a default. The script first uses the simplified fossil-only
.IR foshalt
script to sync and halt the fossil, then kills all running fossil processes before issuing the 
.IR flfmt -v 
command. 
.PP
.IR cpsys
automates replicating between the fossil of
.I source
system and that of
.I dest
system. IMPORTANT: this script assumes that the partition identification is the same on both systems. It also requires the
.IR rexexec (8)
service to be listening on both source and destination machines. It issues the 
.IR fossilize 
command to 
.I source
and saves the output to create the parameters for a 
.IR fosreset 
command sent to 
.I dest.
.PP
Because running fossils are halted by the actions of 
.IR fosreset 
and 
.IR cpsys
, the
.IR fossilstart
script assists in restating the fossil located on a given
.I partition
using standard default parameters. If
.I srvname
is given, it will be used as a stem for the fossil file 
.I/srv 
and also its 
.IR fossilcons (8)
.SH EXAMPLE
These commands are issued from a 
.IR venti (8)
server.
.IP
.EX
% rcpu -h fs -c 'echo fsys main snap -a >>/srv/fscons'
# begin a snap and then wait for it to complete

% ventiprog 
# assumes the user has a bkup.info file with the first line
# venti=tcp!target.venti.ip.addr!17034

% unmount '#S' /dev
% rcpu -h fs -c fossilize |storescore |rcpu -h backup -c storescore
# get most recent fs rootscore to store locally and on backup venti
# the unmount is needed to prevent remote systems seeing local disks

% cpsys fileserver backupserver 
# reset the backup fossil to the rootscore of the snapshot
.EE
.PP
After this seequence, the backup server can choose to use one of the ventis which also contains the replicated rootscore. Usually this is done by changing the value of the 
.B $venti 
variable in 
.IR plan9.ini (8)
.SH SOURCE
.B /sys/src/ants/scripts/ventiprog
.SH SEE ALSO
.IR fossil (4),
.IR fossilcons (8),
.IR venti (8),
.IR venti-backup (8)
.SH BUGS
Managing the namespace seen by remote servers during rcpu commands can lead to partition identification troubles.
.SH NOTE
The foundation of the ventiprog script is taken and modified from
.B /sys/src/cmd/venti/words/backup.example
